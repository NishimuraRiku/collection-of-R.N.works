//========================================
// 
// フォグの処理
// Author:RIKU NISHIMURA
// 
//========================================
// *** fog.cpp ***
//========================================
// R.N.Lib
#include "../../../R.N.Lib.h"

//****************************************
// グローバル変数宣言
//****************************************
static Fog g_fog;	// フォグの情報

//================================================================================
//----------|---------------------------------------------------------------------
//==========| hファイルの共有関数
//----------|---------------------------------------------------------------------
//================================================================================
#if 1
//============================================================
//--------------------| *** 取得 *** |------------------------
//============================================================
#if 1
//========================================
// GetFog関数 - フォグの情報を取得 -
// Author:RIKU NISHIMURA
//========================================
Fog *GetFog(void)
{
	return &g_fog;
}
#endif
//============================================================
//--------------------| *** 設定 *** |------------------------
//============================================================
#if 1
//========================================
// SetFog関数 - フォグの設定処理 -
// Author:RIKU NISHIMURA
//========================================
void SetFog(FogSet fogSet)
{
	// デバイスの所得
	LPDIRECT3DDEVICE9 pDevice = GetD3DDevice();

	// D3DFOG_LINEAR…始点と終点の間でフォグの効果が直線的に強まる
	/* 色         */pDevice->SetRenderState(D3DRS_FOGCOLOR, ColorToD3DCOLOR(fogSet.col));
	/* 頂点モード */pDevice->SetRenderState(D3DRS_FOGTABLEMODE, D3DFOG_LINEAR);
	/* 開始距離   */pDevice->SetRenderState(D3DRS_FOGSTART, fogSet.nStart);
	/* 終了距離   */pDevice->SetRenderState(D3DRS_FOGEND, fogSet.nEnd);
}

//========================================
// EnableFog関数 - フォグの有効無効設定 -
// Author:RIKU NISHIMURA
//========================================
void EnableFog(bool bEnable)
{
	if (!g_fog.bUse)
	{// 使用されていない状態の時、
		return;	// 処理を終了する
	}

	// デバイスの所得
	LPDIRECT3DDEVICE9 pDevice = GetD3DDevice();

	// フォグを有効/無効
	pDevice->SetRenderState(D3DRS_FOGENABLE, bEnable);
}
#endif
#endif